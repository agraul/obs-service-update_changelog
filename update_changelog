#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os
import py
import pytz
from git import Repo
from datetime import datetime
from jinja2 import Environment, PackageLoader, select_autoescape


if __name__ == '__main__':
    repo_path = py.path.local(os.getcwd()) / 'salt-packaging'
    repo = Repo(repo_path.strpath)

    commit = repo.commit('HEAD')

    if "[skip]" in commit.message:
        sys.exit(0)

    existing_patches = set(
        [
            py.path.local(it.path).basename
            for it in repo.commit('HEAD~1').tree['salt']
            if it.path.endswith(".patch")
        ]
    )

    current_patches = set(
        [
            py.path.local(it.path).basename
            for it in repo.commit('HEAD').tree['salt']
            if it.path.endswith(".patch")
        ]
    )

    deleted = existing_patches.difference(current_patches)
    added = current_patches.difference(existing_patches)
    modified = set(
        [
            py.path.local(it.a_path).basename
            for it in repo.commit("HEAD").diff("HEAD~1")
            if it.a_path.endswith(".patch")
        ]
    ).difference(added.union(deleted))


    env = Environment(
        loader=PackageLoader('updatechangelog', 'templates'),
        autoescape=select_autoescape(['txt'])
    )

    template = env.get_template('header.txt')

    current_dt = datetime.now().replace(tzinfo=pytz.utc)

    changelog_entry = template.render(
        message=commit.message.encode('utf8'),
        name=commit.author.name,
        email=commit.author.email,
        added=added,
        modified=modified,
        deleted=deleted,
        datetime=current_dt.strftime("%a %b %-d %X %Z %Y")
    )

    with open('salt.changes', 'r+') as f:
        content = f.read()
        f.seek(0, 0)
        f.write(changelog_entry.encode('utf-8'))
        f.write('\n')
        f.write(content)
